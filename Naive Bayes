import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix
import matplotlib.pyplot as plt


#cargamos el archivo .csv

dataset = pd.read_csv('covid.csv')

#definimos las probabilidades de los sintomas de covid 19

p_fatiga = 0.50
p_tos_seca = 0.30
p_dificultad_al_respirar = 0.20
p_dolor_garganta = 0.40
p_dolor_cabeza = 0.30
p_dolor_cuerpo = 0.10
p_escalofrios = 0.50
p_secrecion_nasal = 0.30
p_perdida_sentido = 0.20
p_fiebre = 0.60
p_dolor_pecho = 0.10


#Definimos la prevalencia de covid en población en general
p_covid = 0.10


#definimos los sintomas

sintomas = ["Fatiga","Tos seca", "Dificultal al respirar","Dolor de garganta","Dolor cabeza",
           "Dolor cuerpo","Escalofrios","Secrecion Nasal","Perdida Sentido","Fiebre","Dolor pecho"]


#Calculamos la probabilidad que un paciente tenga covid

p_sintomas_covid = p_fatiga*p_tos_seca*p_dificultad_al_respirar*p_dolor_garganta*p_dolor_cabeza*p_dolor_cuerpo*p_escalofrios*p_secrecion_nasal*p_perdida_sentido*p_fiebre*p_dolor_pecho



#definimos la probabilidad de no tener covid, es baja
p_sintomas_no_covid = 0.10**11


#Aplicamos el teorema de naive bayes

p_sintomas = p_sintomas_covid*p_covid+p_sintomas_no_covid*(1-p_covid)


#Hallamos la probabilidad y la imprimimos

p_covid_sintomas = p_sintomas_covid*p_covid/p_sintomas


print(f"La probabilidad de que el paciente tenga covid dados los síntomas es de:{p_covid_sintomas}")

#Graficamos

gnb = GaussianNB()
plt.bar(range(1, 11),p_covid_sintomas)
plt.title('Precisión del modelo Naive Bayes')
plt.xlabel('Iteración de validación cruzada')
plt.ylabel('Precisión')
plt.show()
